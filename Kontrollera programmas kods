# Kursa_darbs
// pārvaldība
boolean brightDirection = false;

void changeNav() {
  if (++navPos >= 3) navPos = 0;
  if (navPos == 2) {
    invFlag = true;
    invSet = 0;
  }
  else invFlag = false;
  drawInfo();
  drawSettings();
}

void changePreset() {
  settingsChanged = true;
  invSet = 0;
  readSettings();
  drawInfo();
  drawSettings();
}

void changeMode() {
  changeFlag = true;
  settingsChanged = true;
  invSet = 0;
  drawInfo();
  drawSettings();
}

// gudrs pielāgošanas inkrementators
void incr(int* val, int incr, int limit) {
  *val += incr;
  if (*val > limit) *val = limit;
  if (*val < 0) *val = 0;
}

// mainīt režīmu uz
void changePresetTo(byte preset) {
  if (changeFlag) {
    writeSettings(); //saglabājam pašreizējos iestatījumus
    changeFlag = false;
  }
  presetNum = preset;
  changePreset();
}

// ieslēgt sistēmu
void LEDon() {
  ONflag = true;
  settingsChanged = true;
  btnColorChanged = true;
}

// izslēgt sistēmu
void LEDoff() {
  ONflag = false;
  strip.setBrightness(0);
  digitalWrite(PIN_R, 0);
  digitalWrite(PIN_G, 0);
  digitalWrite(PIN_B, 0);
  digitalWrite(PIN_W, 0);
}
void controlTick() {
  // -----------------PULTS ------------------
#if (USE_IR == 1)
  if (IRLremote.available()) {
    backlTimer = millis();      
    if (!backlState) backlOn();
    auto data = IRLremote.read();
    IRdata = data.command;
    if (IRdata != 292984781) {
      switch (IRdata) {
        case BUTT_OK: changeNav();
          break;
        case BUTT_LEFT:
        case BUTT_RIGHT:
          eeprTimer = millis();
          eeprFlag = true;
          switch (navPos) {
            case 0:   
              if (changeFlag) {
                writeSettings();
                changeFlag = false;
              }
              if (IRdata == BUTT_RIGHT) {
                incr(&presetNum, 1, 9);    
              } else if (IRdata == BUTT_LEFT) {
                incr(&presetNum, -1, 9); 
              }
              changePreset();
              break;
            case 1:   
              if (IRdata == BUTT_RIGHT) {
                incr(&modeNum, 1, 10);   
              } else if (IRdata == BUTT_LEFT) {
                incr(&modeNum, -1, 10);    
              }
              changeMode();
              break;
            case 2:   
              changeFlag = true;
              settingsChanged = true;
              if (IRdata == BUTT_RIGHT) {
                incr(&invSet, 1, setAmount[modeNum] - 1);    
              } else if (IRdata == BUTT_LEFT) {
                incr(&invSet, -1, setAmount[modeNum] - 1);  
              }
              break;
          }
          drawSettings();
          break;
        case BUTT_UP:
        case BUTT_DOWN:
          settingsChanged = true;
          eeprTimer = millis();
          eeprFlag = true;
          if (IRdata == BUTT_UP) {
            if (modeNum == 4 && invSet == 1) {
              incr(&presetSettings[invSet], 100, 10000);  //kelvin
            } else if (modeNum == 3 && invSet == 1) {
              incr(&presetSettings[invSet], 1, maxVals[startFrom[modeNum] + invSet]);
            } else {
              incr(&presetSettings[invSet], IR_STEP, maxVals[startFrom[modeNum] + invSet]);
            }
          } else if (IRdata == BUTT_DOWN) {
            if (modeNum == 4 && invSet == 1) {
              incr(&presetSettings[invSet], -100, 10000);   //kelvin
            } else if (modeNum == 3 && invSet == 1) {
              incr(&presetSettings[invSet], -1, maxVals[startFrom[modeNum] + invSet]);
            } else {
              incr(&presetSettings[invSet], -IR_STEP, maxVals[startFrom[modeNum] + invSet]);
            }
          }
          drawSettings();
          break;
        case BUTT_HASH:
          LEDoff();
          break;
        case BUTT_STAR:
          LEDon();
          break;
        case BUTT_0: changePresetTo(0);
          break;
        case BUTT_1: changePresetTo(1);
          break;
        case BUTT_2: changePresetTo(2);
          break;
        case BUTT_3: changePresetTo(3);
          break;
        case BUTT_4: changePresetTo(4);
          break;
        case BUTT_5: changePresetTo(5);
          break;
        case BUTT_6: changePresetTo(6);
          break;
        case BUTT_7: changePresetTo(7);
          break;
        case BUTT_8: changePresetTo(8);
          break;
        case BUTT_9: changePresetTo(9);
          break;
      }
    }
  }
#endif
